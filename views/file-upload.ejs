<!doctype html>
<html lang="kr">

<head>
  <meta charset="UTF-8" />
  <meta name="home" content="width=device-width, initial-scale=1.0" />
  <title></title>
  <!-- <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script> -->
</head>

<body>
  <input type="file" id="fileInput" />
  <div class="output">
    <button id="uploadBtn">업로드</button>
  </div>

  <div id="result"></div>

  <script>

    const fileInput = document.querySelector('#fileInput');
    const uploadBtn = document.querySelector('#uploadBtn');
    const resultDiv = document.querySelector('#result');

    uploadBtn.addEventListener('click', async () => {
      const file = fileInput.files[0];

      if (!file) {
        alert('파일을 선택하세요.');
        return;
      }

      const controllerUrl = 'http://localhost:3000/lambda'
      
      const formData = new FormData();
      formData.append('file', file);

      try {
        const response = await fetch(controllerUrl, {
          method: 'POST',
          body: formData,
        });


        if (!response.ok) {
          throw new Error(`${response.status}`)
        }

        const data = await response.json();
        return data;

      } catch (error) {
        throw error

      }

      //   try {
      //     // 파일 업로드 함수 호출
      //     const response = await uploadFile(file);

      //     // 성공 결과 표시
      //     resultDiv.textContent = `업로드 성공: ${response.fileUrl}`;
      //   } catch (error) {
      //     // 오류 결과 표시
      //     console.error('업로드 실패:', error);
      //     resultDiv.textContent = '업로드 실패: ' + error.message;
      //   }
      // });

      // async function uploadFile(file) {
      //   const apiGatewayUrl = 'https://1zodmj2uge.execute-api.ap-northeast-2.amazonaws.com/dev/upload';

      //   const fileData = await toBase64(file);

      //   const payload = {
      //     fileName: file.name,
      //     fileType: file.type,
      //     fileData: fileData.split(',')[1], // Base64 인코딩된 파일 데이터만 전달
      //   };

      //   const response = await axios.post(apiGatewayUrl, payload, {
      //     headers: {
      //       'Content-Type': 'application/json',
      //     },
      //   });

      //   return response.data;
      // }

      // Helper function: File to Base64
      // function toBase64(file) {
      //   return new Promise((resolve, reject) => {
      //     const reader = new FileReader();
      //     reader.readAsDataURL(file);
      //     reader.onload = () => resolve(reader.result);
      //     reader.onerror = (error) => reject(error);
      //   });
    }
    )
  </script>
</body>

</html>