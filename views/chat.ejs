<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Chat Room</title>
    <style>
      #chat-box {
        border: 1px solid #ccc;
        height: 300px;
        overflow-y: scroll;
        padding: 10px;
        margin-bottom: 10px;
        background-color: #fff;
        color: #000;
      }
      .message {
        margin: 5px 0;
        padding: 5px;
        border-radius: 5px;
        background-color: #f0f0f0;
      }
      #message-input {
        width: 80%;
        padding: 5px;
        margin-right: 5px;
      }
      #send-button {
        padding: 5px 15px;
      }
    </style>
  </head>
  <body>
    <h1>Chat Room</h1>
    <div id="chat-box"></div>
    <div>
      <input type="text" id="message-input" placeholder="Type your message" />
      <button id="send-button">Send</button>
    </div>

    <script src="https://cdn.socket.io/4.6.1/socket.io.min.js"></script>
    <script>
      const urlParams = new URLSearchParams(window.location.search);
      const roomId = urlParams.get('roomId') || '<%= roomId %>';
      const nickname = '<%= user.nickname %>';
      const token = '<%= user.token %>';
      const socket = io('http://localhost:3001', {
        query: { token },
      });

      console.log(`Nickname: ${nickname}`);

      socket.on('connect', () => {
        console.log(`Connected to server with ID: ${socket.id}`);
        socket.emit('joinRoom', { roomId, nickname });
      });

      socket.on('userJoined', (data) => {
        console.log(`${data.nickname} has joined the room.`);
        const chatBox = document.getElementById('chat-box');
        const messageElement = document.createElement('div');
        messageElement.textContent = `${data.nickname} has joined the room.`;
        chatBox.appendChild(messageElement);
        chatBox.scrollTop = chatBox.scrollHeight;
      });

      socket.on('receiveMessage', (data) => {
        console.log('메시지 수신됨:', data);
        const chatBox = document.getElementById('chat-box');
        if (!chatBox) {
          console.error('chat-box element not found!');
          return;
        }

        const messageElement = document.createElement('div');
        messageElement.className = 'message';
        messageElement.textContent = `${data.sender}: ${data.message}`;
        chatBox.appendChild(messageElement);
        chatBox.scrollTop = chatBox.scrollHeight;

        console.log('메시지 엘리먼트 생성됨:', messageElement.outerHTML);
        console.log('현재 채팅창 내용:', chatBox.innerHTML);
      });

      // 메시지 전송 함수 분리
      function sendMessage() {
        const messageInput = document.getElementById('message-input');
        const message = messageInput.value.trim();
        if (message) {
          console.log('메시지 전송:', message);
          socket.emit('sendMessage', { roomId, message, sender: nickname });
          messageInput.value = '';

          // 즉시 자신의 메시지도 표시
          const chatBox = document.getElementById('chat-box');
          const messageElement = document.createElement('div');
          messageElement.className = 'message';
          messageElement.textContent = `${nickname}: ${message}`;
          chatBox.appendChild(messageElement);
          chatBox.scrollTop = chatBox.scrollHeight;
        }
      }

      // 버튼 클릭 이벤트
      document.getElementById('send-button').addEventListener('click', sendMessage);

      // 엔터 키 이벤트
      document.getElementById('message-input').addEventListener('keypress', (event) => {
        if (event.key === 'Enter') {
          event.preventDefault(); // 폼 제출 방지
          sendMessage();
        }
      });

      socket.on('userLeft', (data) => {
        console.log(`${data.nickname} has left the room.`);
        const chatBox = document.getElementById('chat-box');
        const messageElement = document.createElement('div');
        messageElement.textContent = `${data.nickname} has left the room.`;
        chatBox.appendChild(messageElement);
        chatBox.scrollTop = chatBox.scrollHeight;
      });

      console.log(document.getElementById('chat-box'));

      const chatBox = document.getElementById('chat-box');
      console.log('채팅창 스타일:', window.getComputedStyle(chatBox));
    </script>
  </body>
</html>
