name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - dev # main 브랜치에 푸시될 때 트리거

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: 'your-aws-region' # AWS 리전 (예: ap-northeast-2)
      ECR_REPOSITORY: 'your-ecr-repository-name'
      EB_ENV_NAME: 'your-elastic-beanstalk-environment-name'
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      # 1. Checkout 코드
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.EB_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.EB_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 3. Log in to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # 4. Build Docker image
      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:latest .

      # 5. Push Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker tag $ECR_REPOSITORY:latest ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:latest

      # 6. Deploy updated image to Elastic Beanstalk
      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment --environment-name $EB_ENV_NAME --version-label latest
